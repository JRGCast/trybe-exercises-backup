{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst useTimer = () => {\n  _s();\n\n  const [timer, setTimer] = useState(0);\n  const [randomNumber, setRandomNumber] = useState(null);\n  const min = 1;\n  const max = 100;\n  const isMultiple = randomNumber && (randomNumber % 3 === 0 || randomNumber % 5 === 0);\n  useEffect(() => {\n    const timeInterval = setInterval(() => {\n      const newTimer = timer + 1;\n      const mod10 = newTimer > 0 && newTimer % 10;\n\n      if (mod10 === 0) {\n        setRandomNumber(Math.round(Math.random() * (max - min) + min));\n      }\n\n      setTimer(newTimer);\n    }, 1000);\n    return () => {\n      clearInterval(timeInterval);\n    };\n  }, [timer]);\n  useEffect(() => {\n    if (isMultiple) {\n      setTimeout(() => {\n        setRandomNumber(null);\n      }, 4000);\n    }\n  }, [randomNumber, isMultiple]);\n  return {\n    timer,\n    randomNumber,\n    isMultiple\n  };\n};\n\n_s(useTimer, \"DVchlZAkeNWdU/aXrqV4eQpYcOo=\");\n\nexport default useTimer;","map":{"version":3,"sources":["/home/john/Trybe/trybe-exercises/Desenvolvimento Front-End/bloco_18/18.3/use-effect/src/useTimer.js"],"names":["useState","useEffect","useTimer","timer","setTimer","randomNumber","setRandomNumber","min","max","isMultiple","timeInterval","setInterval","newTimer","mod10","Math","round","random","clearInterval","setTimeout"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,IAAD,CAAhD;AAEA,QAAMO,GAAG,GAAG,CAAZ;AACA,QAAMC,GAAG,GAAG,GAAZ;AAEA,QAAMC,UAAU,GAAGJ,YAAY,KAAKA,YAAY,GAAG,CAAf,KAAqB,CAArB,IAA0BA,YAAY,GAAG,CAAf,KAAqB,CAApD,CAA/B;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,YAAY,GAAGC,WAAW,CAAC,MAAM;AACrC,YAAMC,QAAQ,GAAGT,KAAK,GAAG,CAAzB;AACA,YAAMU,KAAK,GAAGD,QAAQ,GAAG,CAAX,IAAgBA,QAAQ,GAAG,EAAzC;;AACA,UAAGC,KAAK,KAAK,CAAb,EAAgB;AACdP,QAAAA,eAAe,CAACQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBR,GAAG,GAAGD,GAAvB,IAA8BA,GAAzC,CAAD,CAAf;AACD;;AACDH,MAAAA,QAAQ,CAACQ,QAAD,CAAR;AACD,KAP+B,EAO7B,IAP6B,CAAhC;AASA,WAAO,MAAM;AACXK,MAAAA,aAAa,CAACP,YAAD,CAAb;AACD,KAFD;AAGD,GAbQ,EAaN,CAACP,KAAD,CAbM,CAAT;AAeAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGQ,UAAH,EAAe;AACbS,MAAAA,UAAU,CAAC,MAAM;AACfZ,QAAAA,eAAe,CAAC,IAAD,CAAf;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;AACF,GANQ,EAMN,CAACD,YAAD,EAAeI,UAAf,CANM,CAAT;AAQA,SAAO;AACLN,IAAAA,KADK;AAELE,IAAAA,YAFK;AAGLI,IAAAA;AAHK,GAAP;AAKD,CArCD;;GAAMP,Q;;AAuCN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useTimer = () => {\n  const [timer, setTimer] = useState(0);\n  const [randomNumber, setRandomNumber] = useState(null);\n\n  const min = 1;\n  const max = 100;\n  \n  const isMultiple = randomNumber && (randomNumber % 3 === 0 || randomNumber % 5 === 0);\n\n  useEffect(() => {\n    const timeInterval = setInterval(() => {\n      const newTimer = timer + 1\n      const mod10 = newTimer > 0 && newTimer % 10;\n      if(mod10 === 0) {\n        setRandomNumber(Math.round(Math.random() * (max - min) + min));\n      }\n      setTimer(newTimer);\n    }, 1000);\n\n    return () => {\n      clearInterval(timeInterval);\n    }\n  }, [timer])\n\n  useEffect(() => {\n    if(isMultiple) {\n      setTimeout(() => {\n        setRandomNumber(null);\n      }, 4000)\n    }\n  }, [randomNumber, isMultiple])\n\n  return { \n    timer, \n    randomNumber, \n    isMultiple,\n  }\n}\n\nexport default useTimer;"]},"metadata":{},"sourceType":"module"}