{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/john/Trybe/trybe-exercises/Desenvolvimento Front-End/bloco_12/12.2/forms-2.0-app/src/Forms.js\";\nimport React, { Component } from 'react';\nimport './Forms.css';\nimport PropTypes from 'prop-types';\nexport default class Form extends Component {\n  constructor() {\n    super();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleChange.bind(this);\n    this.isValidEmail = this.isValidEmail.bind(this);\n    this.isValidAddress = this.isValidAddress.bind(this);\n    this.isValidCity = this.isValidCity.bind(this);\n    this.state = {\n      NomeCompleto: '',\n      Email: '',\n      Endereço: '',\n      Cidade: '',\n      Estado: ''\n    };\n  }\n\n  handleChange({\n    target\n  }) {\n    let {\n      name\n    } = target;\n    let value = target.type === 'checkbox' ? target.checked : target.value;\n    if (name === 'NomeCompleto') value = value.toUpperCase();\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleBlur({\n    target\n  }) {\n    let {\n      name\n    } = target;\n    let value = target.type === 'checkbox' ? target.checked : target.value;\n    if (name === 'Cidade') value = value.match(/^\\d/g) ? value = '' : value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  isValidEmail() {\n    let result = '';\n\n    if (this.state.Email !== '') {\n      this.state.Email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{3})$/i) ? result = /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'green'\n        },\n        children: \" \\u2705 This is a valid e-mail \\uD83D\\uDE03 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 80\n      }, this) : result = /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'red'\n        },\n        children: \" \\u274C This isn't a valid e-mail \\uD83D\\uDE1F \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 161\n      }, this);\n    }\n\n    return result;\n  }\n\n  isValidAddress() {\n    let result = '';\n    if (this.state.Endereço !== '' && this.state.Endereço.match(/[_=+§*?!#$%&¨¬@\\\\()]/)) result = /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: 'red'\n      },\n      children: \" \\u274C Contains invalid character \\uD83D\\uDE1F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 99\n    }, this);\n    return result;\n  }\n\n  isValidCity() {\n    let result = '';\n    if (this.state.Cidade !== '' && this.state.Cidade.match(/^\\d/)) result = /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: 'red'\n      },\n      children: \" \\u274C Cities don't starts with numbers \\uD83D\\uDE1F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 78\n    }, this);\n    return result;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          className: \"fieldset\",\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            className: \"legends\",\n            children: \"Dados Pessoais\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Nome Completo:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input\",\n              type: \"text\",\n              name: \"NomeCompleto\",\n              value: this.state.NomeCompleto,\n              onChange: this.handleChange,\n              maxLength: 40,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"E-mail:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input\",\n              type: \"email\",\n              name: \"Email\",\n              value: this.state.Email,\n              onChange: this.handleChange,\n              maxLength: 50,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: this.isValidEmail()\n          }, void 0, false), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Endere\\xE7o:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input\",\n              type: \"text\",\n              name: \"Endere\\xE7o\",\n              value: this.state.Endereço,\n              onChange: this.handleChange,\n              maxLength: 200,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: this.isValidAddress()\n          }, void 0, false), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Cidade:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input\",\n              type: \"text\",\n              name: \"Cidade\",\n              value: this.state.Cidade,\n              onChange: this.handleChange,\n              onBlur: this.handleBlur,\n              maxLength: 28,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: this.isValidCity()\n          }, void 0, false), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Estado/UF:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"input\",\n              name: \"Estado\",\n              value: this.state.Estado,\n              onChange: this.handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: this.isValidAddress()\n          }, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/john/Trybe/trybe-exercises/Desenvolvimento Front-End/bloco_12/12.2/forms-2.0-app/src/Forms.js"],"names":["React","Component","PropTypes","Form","constructor","handleChange","bind","handleBlur","isValidEmail","isValidAddress","isValidCity","state","NomeCompleto","Email","Endereço","Cidade","Estado","target","name","value","type","checked","toUpperCase","setState","match","result","color","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './Forms.css'\nimport PropTypes from 'prop-types'\n\nexport default class Form extends Component {\n  constructor() {\n    super()\n    this.handleChange = this.handleChange.bind(this)\n    this.handleBlur = this.handleChange.bind(this)\n    this.isValidEmail = this.isValidEmail.bind(this)\n    this.isValidAddress = this.isValidAddress.bind(this)\n    this.isValidCity = this.isValidCity.bind(this)\n\n    this.state = {\n      NomeCompleto: '',\n      Email: '',\n      Endereço: '',\n      Cidade: '',\n      Estado: '',\n    }\n  }\n  handleChange({ target }) {\n    let { name } = target;\n    let value = target.type === 'checkbox' ? target.checked : target.value\n    if (name === 'NomeCompleto') value = value.toUpperCase()\n    this.setState({\n      [name]: value\n    })\n  }\n  handleBlur({ target }) {\n    let { name } = target;\n    let value = target.type === 'checkbox' ? target.checked : target.value\n    if (name === 'Cidade') value = value.match(/^\\d/g) ? value = '' : value\n    this.setState({\n      [name]: value\n    })\n  }\n\n  isValidEmail() {\n    let result = '';\n    if (this.state.Email !== '') {\n      this.state.Email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{3})$/i) ? result = <span style={{ color: 'green' }}> ✅ This is a valid e-mail 😃 </span> : result = <span style={{ color: 'red' }}> ❌ This isn't a valid e-mail 😟 </span>\n    }\n    return result\n  }\n\n  isValidAddress() {\n    let result = '';\n    if (this.state.Endereço !== '' && this.state.Endereço.match(/[_=+§*?!#$%&¨¬@\\\\()]/)) result = <span style={{ color: 'red' }}> ❌ Contains invalid character 😟</span>\n    return result\n  }\n\n  isValidCity() {\n    let result = '';\n    if (this.state.Cidade !== '' && this.state.Cidade.match(/^\\d/)) result = <span style={{ color: 'red' }}> ❌ Cities don't starts with numbers 😟</span>\n    return result\n  }\n  render() {\n    return (\n      <section>\n        <form>\n          <fieldset className='fieldset'>\n            <legend className='legends'>Dados Pessoais</legend>\n            <label>Nome Completo:\n          <input className='input' type='text' name='NomeCompleto' value={this.state.NomeCompleto} onChange={this.handleChange} maxLength={40} required />\n            </label> <br />\n            <label>E-mail:\n          <input className='input' type='email' name='Email' value={this.state.Email} onChange={this.handleChange} maxLength={50} required />\n            </label>\n            <>{this.isValidEmail()}</>\n            <label>Endereço:\n          <input className='input' type='text' name='Endereço' value={this.state.Endereço} onChange={this.handleChange} maxLength={200} required />\n            </label>\n            <>{this.isValidAddress()}</>\n            <label>Cidade:\n          <input className='input' type='text' name='Cidade' value={this.state.Cidade} onChange={this.handleChange} onBlur={this.handleBlur} maxLength={28} required />\n            </label>\n            <>{this.isValidCity()}</>\n            <label>Estado/UF:\n          <select className='input' name='Estado' value={this.state.Estado} onChange={this.handleChange} required />\n            </label>\n            <>{this.isValidAddress()}</>\n          </fieldset>\n        </form>\n      </section>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}