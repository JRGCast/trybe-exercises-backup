{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/john/Trybe/trybe-exercises/Desenvolvimento Front-End/bloco_12/12.2/forms-2.0-app/src/Forms.js\";\nimport React, { Component } from 'react';\nimport './Forms.css';\nimport PropTypes from 'prop-types';\nexport default class Form extends Component {\n  constructor() {\n    super();\n    this.handleChange = this.handleChange.bind(this);\n    this.isValidEmail = this.isValidEmail.bind(this);\n    this.state = {\n      NomeCompleto: '',\n      Email: ''\n    };\n  }\n\n  handleChange({\n    target\n  }) {\n    let {\n      name\n    } = target;\n    let value = target.type === 'checkbox' ? target.checket : target.value;\n    if (name === 'NomeCompleto') value = value.toUpperCase();\n    this.setState({\n      [name]: value\n    });\n  }\n\n  isValidEmail() {\n    let result = '';\n    this.state.Email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{3})$/i) ? result = /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: 'green'\n      },\n      children: \" \\u2705 This is a valid e-mail =) \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 78\n    }, this) : result = /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: 'red'\n      },\n      children: \" \\u274C Invalid e-mail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 159\n    }, this);\n    return result;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            className: \"legends\",\n            children: \"Dados Pessoais\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Nome Completo:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input\",\n              type: \"text\",\n              name: \"NomeCompleto\",\n              value: this.state.NomeCompleto,\n              onChange: this.handleChange,\n              maxLength: 40,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"E-mail:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input\",\n              type: \"email\",\n              name: \"Email\",\n              value: this.state.Email,\n              onChange: this.handleChange,\n              maxLength: 50,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: this.isValidEmail()\n            }, void 0, false)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/john/Trybe/trybe-exercises/Desenvolvimento Front-End/bloco_12/12.2/forms-2.0-app/src/Forms.js"],"names":["React","Component","PropTypes","Form","constructor","handleChange","bind","isValidEmail","state","NomeCompleto","Email","target","name","value","type","checket","toUpperCase","setState","result","match","color","render"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAC1CG,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,EADH;AAEXC,MAAAA,KAAK,EAAE;AAFI,KAAb;AAID;;AACDL,EAAAA,YAAY,CAAC;AAAEM,IAAAA;AAAF,GAAD,EAAa;AACvB,QAAI;AAAEC,MAAAA;AAAF,QAAWD,MAAf;AACA,QAAIE,KAAK,GAAGF,MAAM,CAACG,IAAP,KAAgB,UAAhB,GAA6BH,MAAM,CAACI,OAApC,GAA8CJ,MAAM,CAACE,KAAjE;AACA,QAAID,IAAI,KAAK,cAAb,EAA6BC,KAAK,GAAGA,KAAK,CAACG,WAAN,EAAR;AAC7B,SAAKC,QAAL,CAAc;AACZ,OAACL,IAAD,GAAQC;AADI,KAAd;AAGD;;AAEDN,EAAAA,YAAY,GAAG;AACb,QAAIW,MAAM,GAAG,EAAb;AACA,SAAKV,KAAL,CAAWE,KAAX,CAAiBS,KAAjB,CAAuB,qCAAvB,IAAgED,MAAM,gBAAG;AAAM,MAAA,KAAK,EAAE;AAAEE,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAzE,GAAiJF,MAAM,gBAAG;AAAM,MAAA,KAAK,EAAE;AAAEE,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA1J;AACA,WAAOF,MAAP;AACD;;AACDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE;AAAA,+BACE;AAAA,kCACE;AAAQ,YAAA,SAAS,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sDACF;AAAO,cAAA,SAAS,EAAC,OAAjB;AAAyB,cAAA,IAAI,EAAC,MAA9B;AAAqC,cAAA,IAAI,EAAC,cAA1C;AAAyD,cAAA,KAAK,EAAE,KAAKb,KAAL,CAAWC,YAA3E;AAAyF,cAAA,QAAQ,EAAE,KAAKJ,YAAxG;AAAsH,cAAA,SAAS,EAAE,EAAjI;AAAqI,cAAA,QAAQ;AAA7I;AAAA;AAAA;AAAA;AAAA,oBADE;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAKE;AAAA,+CACF;AAAO,cAAA,SAAS,EAAC,OAAjB;AAAyB,cAAA,IAAI,EAAC,OAA9B;AAAsC,cAAA,IAAI,EAAC,OAA3C;AAAmD,cAAA,KAAK,EAAE,KAAKG,KAAL,CAAWE,KAArE;AAA4E,cAAA,QAAQ,EAAE,KAAKL,YAA3F;AAAyG,cAAA,SAAS,EAAE,EAApH;AAAwH,cAAA,QAAQ;AAAhI;AAAA;AAAA;AAAA;AAAA,oBADE,eAEE;AAAA,wBAAG,KAAKE,YAAL;AAAH,6BAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AAzCyC","sourcesContent":["import React, { Component } from 'react'\nimport './Forms.css'\nimport PropTypes from 'prop-types'\n\nexport default class Form extends Component {\n  constructor() {\n    super()\n    this.handleChange = this.handleChange.bind(this)\n    this.isValidEmail = this.isValidEmail.bind(this)\n    this.state = {\n      NomeCompleto: '',\n      Email: '',\n    }\n  }\n  handleChange({ target }) {\n    let { name } = target;\n    let value = target.type === 'checkbox' ? target.checket : target.value\n    if (name === 'NomeCompleto') value = value.toUpperCase()\n    this.setState({\n      [name]: value\n    })\n  }\n\n  isValidEmail() {\n    let result = '';\n    this.state.Email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{3})$/i) ? result = <span style={{ color: 'green' }}> ✅ This is a valid e-mail =) </span> : result = <span style={{ color: 'red' }}> ❌ Invalid e-mail</span>\n    return result\n  }\n  render() {\n    return (\n      <section>\n        <form>\n          <fieldset>\n            <legend className='legends'>Dados Pessoais</legend>\n            <label>Nome Completo:\n          <input className='input' type='text' name='NomeCompleto' value={this.state.NomeCompleto} onChange={this.handleChange} maxLength={40} required />\n            </label>\n            <label>E-mail:\n          <input className='input' type='email' name='Email' value={this.state.Email} onChange={this.handleChange} maxLength={50} required />\n              <>{this.isValidEmail()}</>\n            </label>\n          </fieldset>\n        </form>\n      </section>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}