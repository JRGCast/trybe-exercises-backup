{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/john/Trybe/trybe-exercises/Desenvolvimento Front-End/bloco_12/12.2/forms-2.0-app/src/Forms.js\";\nimport React, { Component } from 'react';\nimport './Forms.css';\nimport PropTypes from 'prop-types';\nexport default class Form extends Component {\n  constructor() {\n    super();\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      NomeCompleto: ''\n    };\n  }\n\n  handleChange({\n    target\n  }) {\n    let {\n      name\n    } = target;\n    const value = target.type === 'checkbox' ? target.checket : target.value;\n    if (name === 'NomeCompleto') value.toUpperCase();\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Nome Completo:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input\",\n              type: \"text\",\n              name: \"NomeCompleto\",\n              value: this.state.NomeCompleto,\n              onChange: this.handleChange,\n              maxLength: 40,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/john/Trybe/trybe-exercises/Desenvolvimento Front-End/bloco_12/12.2/forms-2.0-app/src/Forms.js"],"names":["React","Component","PropTypes","Form","constructor","handleChange","bind","state","NomeCompleto","target","name","value","type","checket","toUpperCase","setState","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAC1CG,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE;AADH,KAAb;AAGD;;AACDH,EAAAA,YAAY,CAAC;AAAEI,IAAAA;AAAF,GAAD,EAAa;AACvB,QAAI;AAAEC,MAAAA;AAAF,QAAWD,MAAf;AACA,UAAME,KAAK,GAAGF,MAAM,CAACG,IAAP,KAAgB,UAAhB,GAA6BH,MAAM,CAACI,OAApC,GAA8CJ,MAAM,CAACE,KAAnE;AACA,QAAID,IAAI,KAAK,cAAb,EAA6BC,KAAK,CAACG,WAAN;AAE7B,SAAKC,QAAL,CAAc;AACZ,OAACL,IAAD,GAAQC;AADI,KAAd;AAGD;;AAEDK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE;AAAA,+BACE;AAAA,iCACE;AAAA,sDACF;AAAO,cAAA,SAAS,EAAC,OAAjB;AAAyB,cAAA,IAAI,EAAC,MAA9B;AAAqC,cAAA,IAAI,EAAC,cAA1C;AAAyD,cAAA,KAAK,EAAE,KAAKT,KAAL,CAAWC,YAA3E;AAAyF,cAAA,QAAQ,EAAE,KAAKH,YAAxG;AAAsH,cAAA,SAAS,EAAE,EAAjI;AAAqI,cAAA,QAAQ;AAA7I;AAAA;AAAA;AAAA;AAAA,oBADE;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AA9ByC","sourcesContent":["import React, { Component } from 'react'\nimport './Forms.css'\nimport PropTypes from 'prop-types'\n\nexport default class Form extends Component {\n  constructor() {\n    super()\n    this.handleChange = this.handleChange.bind(this)\n    this.state = {\n      NomeCompleto: '',\n    }\n  }\n  handleChange({ target }) {\n    let { name } = target;\n    const value = target.type === 'checkbox' ? target.checket : target.value\n    if (name === 'NomeCompleto') value.toUpperCase()\n\n    this.setState({\n      [name]: value\n    })\n  }\n\n  render() {\n    return (\n      <section>\n        <form>\n          <fieldset>\n            <label>Nome Completo:\n          <input className='input' type='text' name='NomeCompleto' value={this.state.NomeCompleto} onChange={this.handleChange} maxLength={40} required />\n            </label>\n          </fieldset>\n        </form>\n      </section>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}