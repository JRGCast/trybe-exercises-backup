{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/john/Trybe/trybe-exercises/Desenvolvimento Front-End/bloco_12/12.2/forms-2.0-app/src/Forms.js\";\nimport React, { Component } from 'react';\nimport './Forms.css';\nimport PropTypes from 'prop-types';\nconst ufEstado = [{\n  'AC': 'Acre'\n}, {\n  'AL': 'Alagoas'\n}, {\n  'AP': 'Amapá'\n}, {\n  'AM': 'Amazonas'\n}, {\n  'BA': 'Bahia'\n}, {\n  'CE': 'Ceará'\n}, {\n  'DF': 'Distrito Federal'\n}, {\n  'ES': 'Espírito Santo'\n}, {\n  'GO': 'Goías'\n}, {\n  'MA': 'Maranhão'\n}, {\n  'MT': 'Mato Grosso'\n}, {\n  'MS': 'Mato Grosso do Sul'\n}, {\n  'MG': 'Minas Gerais'\n}, {\n  'PA': 'Pará'\n}, {\n  'PB': 'Paraíba'\n}, {\n  'PR': 'Paraná'\n}, {\n  'PE': 'Pernambuco'\n}, {\n  'PI': 'Piauí'\n}, {\n  'RJ': 'Rio de Janeiro'\n}, {\n  'RN': 'Rio Grande do Norte'\n}, {\n  'RS': 'Rio Grande do Sul'\n}, {\n  'RO': 'Rondônia'\n}, {\n  'RR': 'Roraíma'\n}, {\n  'SC': 'Santa Catarina'\n}, {\n  'SP': 'São Paulo'\n}, {\n  'SE': 'Sergipe'\n}, {\n  'TO': 'Tocantins'\n}].map(element => /*#__PURE__*/_jsxDEV(\"option\", {\n  children: `${Object.values(element)} - ${Object.keys(element)}`\n}, Object.keys(element), false, {\n  fileName: _jsxFileName,\n  lineNumber: 33,\n  columnNumber: 18\n}, this));\nexport default class Form extends Component {\n  constructor() {\n    super();\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.isValidEmail = this.isValidEmail.bind(this);\n    this.isValidAddress = this.isValidAddress.bind(this);\n    this.isValidCity = this.isValidCity.bind(this);\n    this.state = {\n      NomeCompleto: '',\n      Email: '',\n      Endereço: '',\n      Cidade: '',\n      Estado: '',\n      Residência: '',\n      ResCurr: '',\n      Cargo: ''\n    };\n  }\n\n  handleChange({\n    target\n  }) {\n    let {\n      name\n    } = target;\n    let value = target.type === 'checkbox' ? target.checked : target.value;\n    console.log(name, value);\n    if (name === 'NomeCompleto') value = value.toUpperCase();\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleBlur({\n    target\n  }) {\n    let {\n      name\n    } = target;\n    let value = target.type === 'checkbox' ? target.checked : target.value;\n    if (name === 'Cidade') value = value.match(/^\\d/) ? '' : value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  isValidEmail() {\n    let result = '';\n\n    if (this.state.Email !== '') {\n      this.state.Email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{3})$/i) ? result = /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'green'\n        },\n        children: \" \\u2705 This is a valid e-mail \\uD83D\\uDE03 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 80\n      }, this) : result = /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'red'\n        },\n        children: \" \\u274C This isn't a valid e-mail \\uD83D\\uDE1F \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 161\n      }, this);\n    }\n\n    return result;\n  }\n\n  isValidAddress() {\n    let result = '';\n    if (this.state.Endereço !== '' && this.state.Endereço.match(/[_=+§*?!#$%&¨¬@\\\\()]/)) result = /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: 'red'\n      },\n      children: \" \\u274C Contains invalid character \\uD83D\\uDE1F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 99\n    }, this);\n    return result;\n  }\n\n  isValidCity() {\n    let result = '';\n    if (this.state.Cidade !== '' && this.state.Cidade.match(/^\\d/)) result = /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: 'red'\n      },\n      children: \" \\u274C Cities don't starts with numbers \\uD83D\\uDE1F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 78\n    }, this);\n    return result;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n          className: \"fieldset\",\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            className: \"legends\",\n            children: \"Dados Pessoais\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Nome Completo:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input\",\n              type: \"text\",\n              name: \"NomeCompleto\",\n              value: this.state.NomeCompleto,\n              onChange: this.handleChange,\n              maxLength: 40,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"E-mail:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input\",\n              type: \"email\",\n              name: \"Email\",\n              value: this.state.Email,\n              onChange: this.handleChange,\n              maxLength: 50,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: this.isValidEmail()\n          }, void 0, false), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Endere\\xE7o:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input\",\n              type: \"text\",\n              name: \"Endere\\xE7o\",\n              value: this.state.Endereço,\n              onChange: this.handleChange,\n              maxLength: 200,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onChange: this.handleChange,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"Resid\\xEAncia\",\n                value: \"Casa\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), \"Casa\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"Resid\\xEAncia\",\n                value: \"Apartamento\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 15\n              }, this), \"Apto\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: this.isValidAddress()\n          }, void 0, false), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Cidade:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input\",\n              type: \"text\",\n              name: \"Cidade\",\n              value: this.state.Cidade,\n              onChange: this.handleChange,\n              onBlur: this.handleBlur,\n              maxLength: 28,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: this.isValidCity()\n          }, void 0, false), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Estado/UF:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"input\",\n              name: \"Estado\",\n              defaultValue: \"\",\n              onChange: this.handleChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Escolha um estado\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this), ufEstado]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: this.isValidAddress()\n          }, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          className: \"fieldset\",\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            className: \"legends\",\n            children: \" Dados do \\xFAltimo emprego \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\" Resumo do Curr\\xEDculo:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"ResCurr\",\n              value: this.state.ResCurr,\n              maxLength: 1000,\n              onChange: this.handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"\\xDAltimo cargo:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input\",\n              type: \"text\",\n              name: \"Cargo\",\n              value: this.state.Cidade,\n              onChange: this.handleChange,\n              onBlur: this.handleBlur,\n              maxLength: 28,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: this.isValidCity()\n          }, void 0, false), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\" Descri\\xE7\\xE3o do \\xFAltimo cargo\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"ResCargo\",\n              value: this.state.ResCargo,\n              maxLength: 40,\n              onChange: this.handleChange,\n              onFocus: () => alert('Preencha com cautela'),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/john/Trybe/trybe-exercises/Desenvolvimento Front-End/bloco_12/12.2/forms-2.0-app/src/Forms.js"],"names":["React","Component","PropTypes","ufEstado","map","element","Object","values","keys","Form","constructor","handleChange","bind","handleBlur","isValidEmail","isValidAddress","isValidCity","state","NomeCompleto","Email","Endereço","Cidade","Estado","Residência","ResCurr","Cargo","target","name","value","type","checked","console","log","toUpperCase","setState","match","result","color","render","ResCargo","alert"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './Forms.css'\nimport PropTypes from 'prop-types'\n\nconst ufEstado = [\n  { 'AC': 'Acre' },\n  { 'AL': 'Alagoas' },\n  { 'AP': 'Amapá' },\n  { 'AM': 'Amazonas' },\n  { 'BA': 'Bahia' },\n  { 'CE': 'Ceará' },\n  { 'DF': 'Distrito Federal' },\n  { 'ES': 'Espírito Santo' },\n  { 'GO': 'Goías' },\n  { 'MA': 'Maranhão' },\n  { 'MT': 'Mato Grosso' },\n  { 'MS': 'Mato Grosso do Sul' },\n  { 'MG': 'Minas Gerais' },\n  { 'PA': 'Pará' },\n  { 'PB': 'Paraíba' },\n  { 'PR': 'Paraná' },\n  { 'PE': 'Pernambuco' },\n  { 'PI': 'Piauí' },\n  { 'RJ': 'Rio de Janeiro' },\n  { 'RN': 'Rio Grande do Norte' },\n  { 'RS': 'Rio Grande do Sul' },\n  { 'RO': 'Rondônia' },\n  { 'RR': 'Roraíma' },\n  { 'SC': 'Santa Catarina' },\n  { 'SP': 'São Paulo' },\n  { 'SE': 'Sergipe' },\n  { 'TO': 'Tocantins' },\n].map(element => <option key={Object.keys(element)}>{`${Object.values(element)} - ${Object.keys(element)}`}</option>)\n\nexport default class Form extends Component {\n  constructor() {\n    super()\n    this.handleChange = this.handleChange.bind(this)\n    this.handleBlur = this.handleBlur.bind(this)\n    this.isValidEmail = this.isValidEmail.bind(this)\n    this.isValidAddress = this.isValidAddress.bind(this)\n    this.isValidCity = this.isValidCity.bind(this)\n\n    this.state = {\n      NomeCompleto: '',\n      Email: '',\n      Endereço: '',\n      Cidade: '',\n      Estado: '',\n      Residência: '',\n      ResCurr: '',\n      Cargo: '',\n    }\n  }\n  handleChange({ target }) {\n    let { name } = target;\n    let value = target.type === 'checkbox' ? target.checked : target.value\n    console.log(name, value)\n    if (name === 'NomeCompleto') value = value.toUpperCase()\n    this.setState({\n      [name]: value\n    })\n  }\n  handleBlur({ target }) {\n    let { name } = target;\n    let value = target.type === 'checkbox' ? target.checked : target.value\n    if (name === 'Cidade') value = value.match(/^\\d/) ? '' : value\n    this.setState({\n      [name]: value\n    })\n  }\n\n  isValidEmail() {\n    let result = '';\n    if (this.state.Email !== '') {\n      this.state.Email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{3})$/i) ? result = <span style={{ color: 'green' }}> ✅ This is a valid e-mail 😃 </span> : result = <span style={{ color: 'red' }}> ❌ This isn't a valid e-mail 😟 </span>\n    }\n    return result\n  }\n\n  isValidAddress() {\n    let result = '';\n    if (this.state.Endereço !== '' && this.state.Endereço.match(/[_=+§*?!#$%&¨¬@\\\\()]/)) result = <span style={{ color: 'red' }}> ❌ Contains invalid character 😟</span>\n    return result\n  }\n\n  isValidCity() {\n    let result = '';\n    if (this.state.Cidade !== '' && this.state.Cidade.match(/^\\d/)) result = <span style={{ color: 'red' }}> ❌ Cities don't starts with numbers 😟</span>\n    return result\n  }\n\n  render() {\n    return (\n      <section>\n        <form>\n          <fieldset className='fieldset'>\n            <legend className='legends'>Dados Pessoais</legend>\n            <label>Nome Completo:\n          <input className='input' type='text' name='NomeCompleto' value={this.state.NomeCompleto} onChange={this.handleChange} maxLength={40} required />\n            </label> <br />\n            <label>E-mail:\n          <input className='input' type='email' name='Email' value={this.state.Email} onChange={this.handleChange} maxLength={50} required />\n            </label>\n            <>{this.isValidEmail()}</>\n            <label>Endereço:\n          <input className='input' type='text' name='Endereço' value={this.state.Endereço} onChange={this.handleChange} maxLength={200} required />\n              <div onChange={this.handleChange}>\n                <input type=\"radio\" name=\"Residência\" value=\"Casa\" />Casa\n              <input type=\"radio\" name=\"Residência\" value=\"Apartamento\" />Apto\n            </div>\n            </label>\n            <>{this.isValidAddress()}</>\n            <label>Cidade:\n          <input className='input' type='text' name='Cidade' value={this.state.Cidade} onChange={this.handleChange} onBlur={this.handleBlur} maxLength={28} required />\n            </label>\n            <>{this.isValidCity()}</>\n            <label>Estado/UF:\n          <select className='input' name='Estado' defaultValue='' onChange={this.handleChange} required>\n                <option value=''>Escolha um estado</option>\n                {ufEstado}</select>\n            </label>\n            <>{this.isValidAddress()}</>\n          </fieldset>\n          <fieldset className='fieldset'>\n            <legend className='legends'> Dados do último emprego </legend>\n            <label> Resumo do Currículo:\n              <textarea name='ResCurr' value={this.state.ResCurr} maxLength={1000} onChange={this.handleChange} required></textarea>\n            </label>\n            <label>Último cargo:\n          <input className='input' type='text' name='Cargo' value={this.state.Cidade} onChange={this.handleChange} onBlur={this.handleBlur} maxLength={28} required />\n            </label>\n            <>{this.isValidCity()}</>\n            <label> Descrição do último cargo\n              <textarea name='ResCargo' value={this.state.ResCargo} maxLength={40} onChange={this.handleChange} onFocus={() => alert('Preencha com cautela')} required></textarea>\n            </label>\n          </fieldset>\n        </form>\n      </section>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}